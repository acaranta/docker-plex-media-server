kind: pipeline
type: docker
name: Build Image

steps:
- name: Build multiarch
  image: docker:dind
  volumes:
  - name: dockersock
    path: /var/run
  environment:
    APPRISEURL:
      from_secret: appriseurl
    REGISTRYURL:
      from_secret: registryurl
  commands:
  - sleep 5 # give docker enough time to start
  - docker ps -a
  - docker buildx create --name multiarch --driver docker-container --use
  - docker buildx ls
  - docker buildx build --platform linux/arm/v7,linux/arm64/v8,linux/amd64 --push --tag $REGISTRYURL/plex-media-server:latest ./latest
  - docker buildx build --platform linux/arm/v7,linux/arm64/v8,linux/amd64 --push --tag $REGISTRYURL/plex-media-server:autoupdate ./autoupdate


- name: notification
  image: plugins/webhook
  when:
      status: [success, failure]
  settings:
    urls: 
      - from_secret: appriseurl
    content_type: application/json
    template: |
      {
        "owner": "{{ repo.owner }}",
        "repo": "{{ repo.name }}",
        "status": "{{ build.status }}"
      }


services:
- name: docker
  image: docker:dind
  privileged: true
  volumes:
  - name: dockersock
    path: /var/run

volumes:
- name: dockersock
  temp: {}


node:
  runnername: runner02
